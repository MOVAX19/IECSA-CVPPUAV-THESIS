{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Qplain [L] [R]\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Qplain [L] [R]\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QImplementar un ambiente de Software in The Loop utilizando los algoritmos y el ambiente de simulación diseñados para verificar su comportamiento en conjunto\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QLo anterior ha adquirido una robustez bastante significativa en los últimos años, pues existe una gran cantidad de esfuerzos y colaboraciones dedicadas al desarrollo de los mismos, incluso, se han organizado eventos y competencias con el fin de estimular y potenciar el desarrollo de este tipo de sistemas; tal es el caso de la International Conference on Intelligent Robots and systems (IROS) y AlphaPilot, dos eventos de gran magnitud, creados con el objetivo de tratar, demostrar y fomentar los avances que se tienen en el área.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QDebido a lo anterior, soluciones de código abierto como ROS (Robot Operating System; un framework de comunicaciones para el manejo y coordinación de procesos en sistemas robóticos), pueden representar el inicio de la implementación de un estándar en el área, pues al ser de software libre permiten que toda la comunidad utilice, mejore e inspeccione los algoritmo ya implementados.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QDebido a lo anterior, soluciones de código abierto como ROS (Robot Operating System; un framework de comunicaciones para el manejo y coordinación de procesos en sistemas robóticos), pueden representar el inicio de la implementación de un estándar en el área, pues al ser de software libre permiten que toda la comunidad utilice, mejore e inspeccione los algoritmos ya implementados.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QExisten diferentes paradigmas de simulación en los que se puede simular la planta mediante software, tales como Hardware in the loop (HIL) y software in the loop (SIL).\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QEl entrenamiento e implementación se realizan dentro de un framework de simulación de SIL, y la gestión de y comunicación entre procesos se implementar a partir de una arquitectura diseñada en ROS2, todo lo anterior bajo el paradigma de código abierto con el fin de aprovechar las ventajas previamente mencionadas y aportar los esquemas de configuración y diseño a la comunidad.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QEl entrenamiento e implementación se realizan dentro de un framework de simulación de SIL, y la gestión de y comunicación entre procesos se implementaron a partir de una arquitectura diseñada en ROS2, todo lo anterior bajo el paradigma de código abierto con el fin de aprovechar las ventajas previamente mencionadas y aportar los esquemas de configuración y diseño a la comunidad.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QEl entrenamiento e implementación se realizan dentro de un framework de simulación de SIL, y la gestión y comunicación entre procesos se implementaron a partir de una arquitectura diseñada en ROS2, todo lo anterior bajo el paradigma de código abierto con el fin de aprovechar las ventajas previamente mencionadas y aportar los esquemas de configuración y diseño a la comunidad.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QEl entrenamiento e implementación se realizan dentro de un framework de simulación de SIL, y la gestión y comunicación entre procesos se implementan a partir de una arquitectura diseñada en ROS2, todo lo anterior bajo el paradigma de código abierto con el fin de aprovechar las ventajas previamente mencionadas y aportar los esquemas de configuración y diseño a la comunidad.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QAdemás, para observar el desempeño de su implementación compararon su arquitectura con otras propuestas, SSD7, SSD300 y SmallerVGG, en simulaciones y ambientes de exteriores e interiores.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QAl ejecutar la instrucción anterior, se instala en conjunto Gazebo y el plugin para la comunicación entre ROS y Gazebo, gazeborospkg.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QDentro de los eventos o competencias más significativas se encuentra el Autonomous Drone Racing (ADR)\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, llevado a cabo cada año en la Conferencia Internacional de Sistemas y Robots Inteligentes (IROS, por sus siglas en inglés), y el AlphaPilot Challenge\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, organizado por Lockheed Martin en colaboración con Nvidia y la Liga de Carrera de Drones (DRL).\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QDentro de los eventos o competencias más significativas se encuentra el Autonomous Drone Racing (ADR)\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, llevado a cabo cada año en la Conferencia Internacional de Sistemas y Robots Inteligentes (IROS, por sus siglas en inglés), el AlphaPilot Challenge\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, organizado por Lockheed Martin en colaboración con Nvidia y la Liga de Carrera de Drones (DRL); y Game of Drones\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, gestionada por Microsoft para la Conferencia Anual de Sistemas de Procesamiento de Información Neuronal (NeurIPS) de 2019.\\E$"}
{"rule":"EL_TILDE","sentence":"^\\QEn cada edición del ADR, las compuertas utilizadas para delimitar el circuito han conservado un característico color naranja; en cada evento los circuitos cumplieron con los requerimientos y pruebas mencionadas anterior mente, excepto en la edición 2019 en donde el circuito estuvo compuesto por dos grupos de compuertas LED, alfombras con patrones y luces controladas; además, el tamaño de este circuito fue reducido para producir una pista mucho más angosta, con el objetivo de incrementar la dificultad en el desafió \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; resolución:\\E$"}
{"rule":"SIGLAS","sentence":"^\\QDebido a lo anterior, el desarrollador tiene que escoger entre una de estas dos APIs A partir de lo anterior, en 2014 una nueva versión de ROS con un enfoque y estructura distinta es anunciada por Open Robotics.\\E$"}
{"rule":"SPANISH_WORD_REPEAT_BEGINNING_RULE","sentence":"^\\QSistemas en tiempo real:\\E$"}
{"rule":"SPANISH_WORD_REPEAT_BEGINNING_RULE","sentence":"^\\QSistemas en tiempo real: soporte\\E$"}
{"rule":"SPANISH_WORD_REPEAT_BEGINNING_RULE","sentence":"^\\QSistemas en tiempo real: soporte para este tipo de sistemas de forma nativa en ROS, ofreciendo comunicación inter-proceso e inter-máquina.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QDespués, en la primavera de 2011, Willow Garage comenzó a financiar el desarrollo de Gazebo, y más tarde, en 2012, la Open Source Robotics Foundation (OSRF; que más tarde se convertiría en Open robotics)\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qsame .\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QPara ello es necesario abrir una terminal dentro del directorio donde se encuentra el proyecto y ejecutar el comando rm con permisos de administrador.\\E$"}
{"rule":"SE_CREO","sentence":"^\\QDebido a que se trabajo con un paradigma de módulos, en donde cada etapa descrita corresponde a un modulo,\\E$"}
{"rule":"AGREEMENT_ADJ_NOUN","sentence":"^\\QCaracterística ROS 1 ROS 2 Plataformas Únicamente soporta de forma nativa Ubuntu Soporta Ubuntu, Mac OS X y Windows 10 ROS 1 vs ROS 2\\E$"}
{"rule":"AGREEMENT_ADJ_NOUN","sentence":"^\\QCaracterística ROS 1 ROS 2 Plataformas Únicamente soporta de forma nativa Ubuntu Soporta Ubuntu, Mac OS X y Windows 10 Lenguajes de programación ROS 1 vs ROS 2\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QEntonces, en el caso de esta etapa, los comandos de vuelo utilizados fueron MAV CMDCOMPONENTARMDISARM para el armado de los motores y MAVCMDNAV TAKEOFF para la orden de despegue.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QEntonces, para solucionar este segundo problema se debe de crear un archivo utilizando el comando touch con la extensión .world.\\E$"}
{"rule":"MORFOLOGIK_RULE_ES","sentence":"^\\QSi bien la figura \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q muestra de manera acertada la correcta ejecución de la secuencia de despegue, a simple vista resulta difícil decir con exactitud sin el dron alcanzó, o no, la altura desea.\\E$"}
{"rule":"ES_UNPAIRED_BRACKETS","sentence":"^\\Q[Aprendizaje profundo:] del inglés Deep Learning', es una subárea de la inteligencia artificial, en donde el modelo de aprendizaje se basa en una gran conjunto de capas compuestas por redes neuronales artificiales [Arquitectura:] [Código libre/abierto:] [Comando de vuelo] [Control:] [Convolución:] [Entrenamiento:] [Espacio de color] [Firmware:] [Fotograma:] [Framework:] [Hardware:] [Hardware in the loop:] [Histograma de color:] [Interfaz de programación de aplicación:] [Librería:] [Machine learning:] [Máquina de estados:] [Matiz:] [Multiplataforma:] [Odometría:] [Percepción:] [Piloto automático:] [Quadrotor:] [Rapid control prototyping:] [Red neuronal artificial:] [Saturación:] [Script:] [Segmentación de color:] [Simulación:] [Sistema operativo:] [Software:] [Software in the loop:] [Terminal de comandos] [Tiempo real:] [Trayectoria de vuelo:] [Validación:] [Valor:] [Waypoint:]\\E$"}
{"rule":"AGREEMENT_DET_NOUN","sentence":"^\\QLa figura \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q muestra un diagrama general de la implementación de \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q en 4 pasos; primero se adquiere la imagen captada por la cámara del dron; después, se utiliza la imagen captada para insertarla en un mosaico junto con otras imágenes captadas durante el recorrido del dron; el mosaico generado es ingresado en la RNA; por último, se genera el comando de vuelo y se hace pasar a través de un filtro para disminuir el ruido presente durante el procesamiento de las imágenes.\\E$"}
